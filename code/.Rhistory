<<<<<<< HEAD
library(mvtnorm)
library(plotly)
library(MASS)
library(ggplot2)
sigma <- matrix(c(4,2,2,3), ncol = 2)
sigma
means <- c(0, 0)
n <- 1000
set.seed(42)
x <- rmvnorm(n = n, mean = means, sigma = sigma)
str(x)
head(x)
d <- data.frame(x)
names(d)
## marginal of X1
d %>%
ggplot(aes(x = X1)) +
geom_density()
p1 <- data_frame(x = -3:3) %>%
ggplot(aes(x = x)) +
stat_function(fun = dnorm, n = n)
p1
p2 <- ggplot(d, aes(x = X1, y = X2)) +
geom_point(alpha = .5) +
geom_density_2d()
p2
p3 <- ggplot(d, aes(x = X1, y = X2)) +
geom_point(alpha = .5) +
geom_bin2d() +
scale_fill_viridis_c()
p3
(p <- plot_ly(d, x = ~X1, y = ~X2))
add_histogram2d(p)
add_histogram2dcontour(p)
dens <- kde2d(d$X1, d$X2)
plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
d$dens <- dmvnorm(x = d)
p4 <- plot_ly(d, x = ~ X1, y = ~ X2, z = ~ dens,
marker = list(color = ~ dens,
showscale = TRUE)) %>%
add_markers()
p4
dens <- kde2d(d$X1, d$X2)
plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
add_histogram2dcontour(p)
dens <- kde2d(d$X1, d$X2)
plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
add_histogram2dcontour(p)
d$dens <- dmvnorm(x = d)
p4 <- plot_ly(d, x = ~ X1, y = ~ X2, z = ~ dens,
marker = list(color = ~ dens,
showscale = TRUE)) %>%
add_markers()
p4
(p <- plot_ly(d, x = ~X1, y = ~X2))
add_histogram2d(p)
p4 <- plot_ly(d, x = ~ X1, y = ~ X2, z = ~ dens,
marker = list(color = ~ dens,
showscale = TRUE)) %>%
add_markers()
p4
?pbinom
rnorm(10000, 272, 13.4)
x <- rnorm(10000, 272, 13.4)
length(X < 290)
length(x < 290 & x > 250)
length(x)
length(x < 290)
df <- data.frame(X = rnorm(10000, 272, 13.4))
length(df[df$X < 290 & df$X > 250,]$X)/length(df$X)
df$X < 290
length(df$X)
df[df$X < 290,]
df[df$X < 290,]$X
length(df[df$X < 290 & df$X > 250,])/length(df$X)
pbinom(290, 800, 0.34) - pbinom(250, 800, 0.34)
?rexp
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
plot(players[1])
players[]
players[1
]
setwd("C:/Users/Dan Lim/Desktop/MATH340Proj/code")
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
players[1]
players
hist(players$Age)
hist(players$Mean_CP)
dat[1]
dat[2]
View(dat)
View(players)
## EDA
hist(players$Age)
hist(players$Mean_CP)
hist(players$Std_CP)
View(players)
any(players$Elo == 0)
players[players$Elo == 0,]
unique(players[players$Elo == 0,]$Name)
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
## EDA
hist(players$Age)
hist(players$Mean_CP)
hist(players$Std_CP)
hist(players$Elo)
unique(players[players$Elo == 0,]$Name)
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
unique(players[players$Elo == 0,]$Name)
## EDA
hist(players$Age)
hist(players$Mean_CP)
hist(players$Std_CP)
hist(players$Elo)
min(players$Elo)
players[players$Elo==1592,]$Name
hist(sqrt(players$Elo))
?sqrt
## ord reg
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
players2.lm <- lm(players$Std_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players2.lm)
## ordinal reg
library(MASS)
library(RStata)
library(modelsummary)
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord2 <- polr(WhiteWL ~ Elo + OppElo, data=players)
summary(players.ord2)
(ctable <- coef(summary(players.ord2)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
mod = list("POLR_WL" = players.ord,
"POLR_WhiteWL" = players.ord2)
modelsummary(mod, stars = TRUE)
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
p
niemann.lm <- lm(niemann$Std_CP ~ niemann$Age + niemann$Elo + niemann$OppElo + niemann$WL)
summary(niemann.lm)
dat[4]
dat[20]
dat[21]
dat[22]
niemann <- dat[22]
niemann.lm <- lm(niemann$Std_CP ~ niemann$Age + niemann$Elo + niemann$OppElo + niemann$WL)
summary(niemann.lm)
plot(niemann.lm)
niemann.lm <- lm(niemann$Std_CP ~ niemann$Age + niemann$Elo + niemann$OppElo + niemann$WL)
niemann
## individually
anand <- dat[1]
View(anand)
## individually
anand <- data.frame(dat[1])
View(anand)
View(dat)
## individually
anand <- bind_rows(dat[1], .id = "column_label")
View(anand)
## individually
anand <- dat[1][0]
## individually
anand <- dat[1]
View(anand)
dat[1]
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
dat[1]
dat[2]
## individually
anand <- dat[2]
View(anand)
## individually
anand <- bind_rows(dat[2])
View(anand)
players <- bind_rows(dat)
View(players)
players <- bind_rows(dat, .id = "column_label")
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
andreikin <- bind_rows(dat[3])
View(andreikin)
anand <- bind_rows(dat[2])
andreikin <- bind_rows(dat[3])
aronian <- bind_rows(dat[4])
bu <- bind_rows(dat[5])
carlsen <- bind_rows(dat[6])
caruana <- bind_rows(dat[7])
ding <- bind_rows(dat[8])
dominguezPerez <- bind_rows(dat[9])
duda <- bind_rows(dat[10])
eljanov <- bind_rows(dat[11])
erigaisi <- bind_rows(dat[12])
firouzja <- bind_rows(dat[13])
giri <- bind_rows(dat[14])
gukesh <- bind_rows(dat[15])
harikrishna <- bind_rows(dat[16])
karjakin <- bind_rows(dat[17])
le <- bind_rows(dat[18])
mamedyarov <- bind_rows(dat[19])
nakamura <- bind_rows(dat[20])
nepo <- bind_rows(dat[21])
niemann <- bind_rows(dat[22])
rapport <- bind_rows(dat[23])
so <- bind_rows(dat[24])
tomashevsky <- bind_rows(dat[25])
topalov <- bind_rows(dat[26])
vachierLagrave <- bind_rows(dat[27])
vallejoPons <- bind_rows(dat[28])
vitiugov <- bind_rows(dat[29])
wangH <- bind_rows(dat[30])
wei <- bind_rows(dat[31])
yu <- bind_rows(dat[32])
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
individuals <- c(anand, andreikin, aronian, bu, carlsen, caruana,
ding, dominguezPerez, duda, eljanov, erigaisi,
firouzja, giri, gukesh, harikrishna, karjakin, le,
mamedyarov, nakamura, nepo, niemann, rapport, so,
tomashevsky, topalov, vachierLagrave, vallejoPons,
vitiugov, wangH, wei, yu)
View(individuals)
individuals$X
(individuals,hist())
lapply(individuals,hist())
lapply(individuals,hist(Mean_CP))
lapply(individuals,hist($Mean_CP))
lapply(individuals,hist(individuals$Mean_CP))
unique(players$Name)
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
names <- unique(players$Name)
lower(players$Name)
tolower(unique(players$Name))
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
names <- tolower(unique(players$Name))
for (name in names) {
hist(players[players$Name == name,]$Mean_CP)
}
players[players$Name==name,]$Mean_CP
name <- 'anand'
players[players$Name==name,]$Mean_CP
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
names <- unique(players$Name)
for (name in names) {
hist(players[players$Name == name,]$Mean_CP)
}
name + h
name + "H"
names(players)
names(players$Name)
concat
?concat
paste("hi" + name)
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for ", name))
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", name))
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", name))
}
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
}
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
library(stringr)
names <- unique(players$Name)
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
}
names(players)
# w/ normalization
for (name in names) {
hist(log(players[players$Name == name,]$Mean_CP), main=paste("Mean CP Histogram for", str_to_title(name)))
#hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
#hist(players[players$Name == name,]$Elo, main=paste("Elo Histogram for", str_to_title(name)))
}
# w/o normalization
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Elo, main=paste("Elo Histogram for", str_to_title(name)))
}
# w/ normalization
for (name in names) {
hist(log(players[players$Name == name,]$Mean_CP), main=paste("Mean CP Histogram for", str_to_title(name)))
hist(log(players[players$Name == name,]$Std_CP), main=paste("StD CP Histogram for", str_to_title(name)))
#hist(players[players$Name == name,]$Elo, main=paste("Elo Histogram for", str_to_title(name)))
}
# w/o normalization
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Elo, main=paste("Elo Histogram for", str_to_title(name)))
}
# w/ normalization
players$Mean_CP <- log(players$Mean_CP)
players$Std_CP <- log(players$Std_CP)
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
}
## lin reg (mean_cp)
for (name in names) {
p.lm <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
summary(p.lm)
}
summary(p.lm)
paste(name,".lm") <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
plot(p.lm)
plot(p.lm)
# w/o normalization
par(mfrow=c(2,2))
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
}
# w/o normalization
par(mfrow=c(2,1))
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
}
## lin reg (mean_cp)
par(mfrow=c(2,2))
for (name in names) {
p.lm <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
summary(p.lm)
plot(p.lm)
}
print(summary(p.lm))
for (name in names) {
p.lm <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
print(summary(p.lm))
plot(p.lm)
}
print(name, summary(p.lm))
for (name in names) {
p.lm <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
print(name)
print(summary(p.lm))
plot(p.lm)
}
## EDA
hist(players$Mean_CP)
hist(players$Std_CP)
## EDA
par(mfrow=c(2,1))
hist(players$Mean_CP)
hist(players$Std_CP)
shapiro.test(players$Mean_CP)
?sample
rand_samp <- sample(players$Mean_CP, 5000)
shapiro.test(players$Mean_CP)
rand_samp <- sample(players$Mean_CP, 4999)
shapiro.test(players$Mean_CP)
rand_samp <- sample(players$Mean_CP, 5000)
shapiro.test(rand_samp)
## EDA
par(mfrow=c(2,1))
hist(players$Mean_CP)
hist(players$Std_CP)
rand_samp_std <- sample(players$Std_CP, 5000)
shapiro.test(rand_samp_std)
qqplot(players$Mean_CP)
qqline(players$Mean_CP)
qqnorm(players$Mean_CP)
qqline(players$Mean_CP, col = "red", lwd = 2)
qqnorm(players$Std_CP)
qqline(players$Std_CP, col = "red", lwd = 2)
## EDA
library(LambertW)
test_norm(players$Std_CP)
test_norm(players$Mean_CP)
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
players2.lm <- lm(players$Std_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players2.lm)
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
## ordinal reg
library(MASS)
library(RStata)
library(modelsummary)
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
## lin reg
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord2 <- polr(WhiteWL ~ Elo + OppElo, data=players)
summary(players.ord2)
(ctable <- coef(summary(players.ord2)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord2 <- polr(WhiteWL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord2)
(ctable <- coef(summary(players.ord2)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
## time
players3.lm <- lm(players$Mean_CP ~ players$Time + players$Elo + players$OppElo + players$WL)
summary(players3.lm)
players4.lm <- lm(players$Std_CP ~ players$Time + players$Elo + players$OppElo + players$WL)
summary(players4.lm)
## time
players.ord3 <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord3)
(ctable <- coef(summary(players.ord3)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord4 <- polr(WhiteWL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord4)
(ctable <- coef(summary(players.ord4)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
## age
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
players2.lm <- lm(players$Std_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players2.lm)
## age
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm) ## intercept, elo, WL0, WL1
## time
players3.lm <- lm(players$Mean_CP ~ players$Time + players$Elo + players$OppElo + players$WL)
summary(players3.lm) ## intercept, elo, WL0, WL1
summary(players4.lm)
players4.lm <- lm(players$Std_CP ~ players$Time + players$Elo + players$OppElo + players$WL)
summary(players4.lm)
## age
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord2 <- polr(WhiteWL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord2)
(ctable <- coef(summary(players.ord2)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
## time
players.ord3 <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord3)
(ctable <- coef(summary(players.ord3)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord4 <- polr(WhiteWL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord4)
(ctable <- coef(summary(players.ord4)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
## model summary
mod = list("POLR_WL_age" = players.ord,
"POLR_WhiteWL_age" = players.ord2,
"POLR_WL_time" = players.ord3,
"POLR_WhiteWL_time" = players.ord4)
modelsummary(mod, stars = TRUE)
?vif
??vif
=======
ggtheme = theme_minimal(),
main='Cluster of Mean and Std CP')
results4
fviz_cluster(results5, data = players_no_outliers[,c(5,6)],
ellipse.type = "convex",
palette = "jco",
axes = c(1, 3),
ggtheme = theme_minimal(),
main='Cluster of Mean and Std CP')
results5
fviz_cluster(results6, data = players_no_outliers[,c(5,6)],
ellipse.type = "convex",
palette = "jco",
axes = c(1, 3),
ggtheme = theme_minimal(),
main='Cluster of Mean and Std CP')
results6
## transform data w/ log to normalize (sort of)
hist(players$Mean_CP) ## before
players$Mean_CP <- log(players$Mean_CP)
hist(players$Mean_CP) ## after
hist(players$Std_CP) ## before
players$Std_CP <- log(players$Std_CP)
hist(players$Std_CP) ## after
results7<-kmeans(players[,c(5,6)],2)
results8<-kmeans(players[,c(5,6)],3)
results9<-kmeans(players[,c(5,6)],4)
fviz_nbclust(players[,c(5,6)], kmeans, method = "wss") #+
#geom_vline(xintercept = 3, linetype = 2)
fviz_nbclust(players[,c(5,6)], method = "silhouette",
FUN = hcut, k.max = 5)
fviz_cluster(results7, data = players[,c(5,6)],
ellipse.type = "convex",
palette = "jco",
axes = c(1, 3),
ggtheme = theme_minimal(),
main='Cluster of Mean and Std CP')
results7
fviz_cluster(results8, data = players[,c(5,6)],
ellipse.type = "convex",
palette = "jco",
axes = c(1, 3),
ggtheme = theme_minimal(),
main='Cluster of Mean and Std CP')
results8
fviz_cluster(results9, data = players[,c(5,6)],
ellipse.type = "convex",
palette = "jco",
axes = c(1, 3),
ggtheme = theme_minimal(),
main='Cluster of Mean and Std CP')
results9
## remove outliers + redo cluster
Q <- quantile(players$Mean_CP, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(players$Mean_CP)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
mean_eliminated <- subset(players, players$Mean_CP > (Q[1] - 1.5*iqr) & players$Mean_CP < (Q[2]+1.5*iqr))
Q <- quantile(mean_eliminated$Std_CP, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(mean_eliminated$Std_CP)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
players_no_outliers <- subset(mean_eliminated, mean_eliminated$Std_CP > (Q[1] - 1.5*iqr) & mean_eliminated$Std_CP < (Q[2]+1.5*iqr))
results10<-kmeans(players_no_outliers[,c(5,6)],2)
results11<-kmeans(players_no_outliers[,c(5,6)],3)
results12<-kmeans(players_no_outliers[,c(5,6)],4)
fviz_nbclust(players_no_outliers[,c(5,6)], kmeans, method = "wss") #+
#geom_vline(xintercept = 3, linetype = 2)
fviz_nbclust(players_no_outliers[,c(5,6)], method = "silhouette",
FUN = hcut, k.max = 5)
fviz_cluster(results10, data = players_no_outliers[,c(5,6)],
ellipse.type = "convex",
palette = "jco",
axes = c(1, 3),
ggtheme = theme_minimal(),
main='Cluster of Mean and Std CP')
results10
fviz_cluster(results11, data = players_no_outliers[,c(5,6)],
ellipse.type = "convex",
palette = "jco",
axes = c(1, 3),
ggtheme = theme_minimal(),
main='Cluster of Mean and Std CP')
results11
fviz_cluster(results12, data = players_no_outliers[,c(5,6)],
ellipse.type = "convex",
palette = "jco",
axes = c(1, 3),
ggtheme = theme_minimal(),
main='Cluster of Mean and Std CP')
results12
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players <- players[,-c(1,2,11)]
## unscaled lin reg ##
set.seed(123)
library(caret)
library(car)
## mean_cp
training.samples <- players$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
players.lm1 <- lm(Mean_CP~.,data=train.data)
summary(players.lm1) # Age, Time, Std_CP, Elo, WL, WhiteWL significant
vif(players.lm1) #age, time, WL, WhiteWL need to be removed
players.lm2 <- lm(Mean_CP~Std_CP + Elo,data=train.data)
summary(players.lm2) # Std_CP, Elo significant
vif(players.lm2) #looks good now
players.lm3 <- lm(Mean_CP~(Std_CP + Elo)^2,
data=train.data)
summary(players.lm3) ## no interactions are significant
predictions1 <- players.lm2 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions1, test.data$Mean_CP),
R2 = R2(predictions1, test.data$Mean_CP)
)
predictions2 <- players.lm3 %>% predict(test.data)
p2=data.frame(
RMSE = RMSE(predictions2, test.data$Mean_CP),
R2 = R2(predictions2, test.data$Mean_CP)
)
p1 ##best model (though, marginally)
p2
AIC(players.lm2,players.lm3)
## std_cp
training.samples <- players$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
players.lm4 <- lm(Std_CP~.,data=train.data)
summary(players.lm4) ##only mean_cp significant
vif(players.lm4) ##age, time, WL, WhiteWL need to be removed
players.lm5 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players.lm5) ##only mean_cp significant
vif(players.lm5) ##looks good now
players.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm6) ##mean_cp, elo, oppelo, elo*oppelo significant
players.lm7 <- lm(Std_CP~Mean_CP + Elo + OppElo + Elo*OppElo,data=train.data)
summary(players.lm7) ##mean_cp, elo, oppelo, elo*oppelo significant
players.lm8 <- lm(Std_CP~Mean_CP,data=train.data)
summary(players.lm8)
predictions3 <- players.lm5 %>% predict(test.data)
p3=data.frame(
RMSE = RMSE(predictions3, test.data$Std_CP),
R2 = R2(predictions3, test.data$Std_CP)
)
predictions4 <- players.lm6 %>% predict(test.data)
p4=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
predictions5 <- players.lm7 %>% predict(test.data)
p5=data.frame(
RMSE = RMSE(predictions5, test.data$Std_CP),
R2 = R2(predictions5, test.data$Std_CP)
)
predictions6 <- players.lm8 %>% predict(test.data)
p6=data.frame(
RMSE = RMSE(predictions6, test.data$Std_CP),
R2 = R2(predictions6, test.data$Std_CP)
)
p3
p4 ## best model
p5
p6
AIC(players.lm5,players.lm6,players.lm7,players.lm8,players.lm9)
## remove outliers ##
Q <- quantile(players$Mean_CP, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(players$Mean_CP)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
mean_eliminated <- subset(players, players$Mean_CP > (Q[1] - 1.5*iqr) & players$Mean_CP < (Q[2]+1.5*iqr))
Q <- quantile(mean_eliminated$Std_CP, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(mean_eliminated$Std_CP)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
players_no_outliers <- subset(mean_eliminated, mean_eliminated$Std_CP > (Q[1] - 1.5*iqr) & mean_eliminated$Std_CP < (Q[2]+1.5*iqr))
## mean_cp
training.samples <- players_no_outliers$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players_no_outliers[training.samples, ]
test.data <- players_no_outliers[-training.samples, ]
players_no_outliers.lm1 <- lm(Mean_CP~.,data=train.data)
summary(players_no_outliers.lm1) # Age, Time, Std_CP, Elo, WL, WhiteWL significant
vif(players_no_outliers.lm1) #age, time, WL, WhiteWL need to be removed
vif(players_no_outliers.lm1) #age, time need to be removed
players_no_outliers.lm2 <- lm(Mean_CP~Std_CP + Elo + WL + WhiteWL,data=train.data)
summary(players_no_outliers.lm2) # Std_CP, Elo significant
vif(players_no_outliers.lm2) #looks good now
vif(players_no_outliers.lm2) #looks good now
players_no_outliers.lm3 <- lm(Mean_CP~Std_CP + Elo,
data=train.data)
summary(players_no_outliers.lm3) ## no interactions are significant
vif(players_no_outliers.lm3)
players_no_outliers.lm4 <- lm(Mean_CP~(Std_CP + Elo)^2,
data=train.data)
summary(players_no_outliers.lm4) ## no interactions are significant
predictions1 <- players_no_outliers.lm3 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions1, test.data$Mean_CP),
R2 = R2(predictions1, test.data$Mean_CP)
)
predictions4 <- players_no_outliers.lm3 %>% predict(test.data)
p2=data.frame(
RMSE = RMSE(predictions2, test.data$Mean_CP),
R2 = R2(predictions2, test.data$Mean_CP)
)
predictions1 <- players_no_outliers.lm3 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions1, test.data$Mean_CP),
R2 = R2(predictions1, test.data$Mean_CP)
)
predictions2 <- players_no_outliers.lm3 %>% predict(test.data)
p2=data.frame(
RMSE = RMSE(predictions2, test.data$Mean_CP),
R2 = R2(predictions2, test.data$Mean_CP)
)
p1 ##best model (though, marginally)
p2
predictions2 <- players_no_outliers.lm4 %>% predict(test.data)
p2=data.frame(
RMSE = RMSE(predictions2, test.data$Mean_CP),
R2 = R2(predictions2, test.data$Mean_CP)
)
p1 ##best model (though, marginally)
p2
AIC(players_no_outliers.lm3,players_no_outliers.lm4)
## std_cp
training.samples <- players_no_outliers$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players_no_outliers[training.samples, ]
test.data <- players_no_outliers[-training.samples, ]
players_no_outliers.lm5 <- lm(Std_CP~.,data=train.data)
summary(players_no_outliers.lm5) ##only mean_cp significant
vif(players_no_outliers.lm5) ##age, time, WL, WhiteWL need to be removed
players_no_outliers.lm6 <- lm(Std_CP~Mean_CP + Elo + OppElo + WL + WhiteWL,data=train.data)
summary(players_no_outliers.lm6) ##only mean_cp significant
players_no_outliers.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo + WL + WhiteWL)^2,data=train.data)
summary(players_no_outliers.lm6) ##only mean_cp significant
players_no_outliers.lm5 <- lm(Std_CP~.,data=train.data)
summary(players_no_outliers.lm5) ##mean_cp, oppelo significant
vif(players_no_outliers.lm5) ##age, time need to be removed
players_no_outliers.lm6 <- lm(Std_CP~Mean_CP + Elo + OppElo + WL + WhiteWL,data=train.data)
summary(players_no_outliers.lm6) ##only mean_cp significant
vif(players_no_outliers.lm6) ##looks good now
players_no_outliers.lm7 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players_no_outliers.lm7) ##mean_cp, elo, oppelo, elo*oppelo significant
vif(players_no_outliers.lm7)
summary(players_no_outliers.lm7) #mean_cp, elo, oppelo, elo*oppelo significant
players_no_outliers.lm8 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players_no_outliers.lm8) #only mean_cp significant
players_no_outliers.lm9 <- lm(Std_CP~Mean_CP + Elo + OppElo + Mean_CP*OppElo +
Elo*OppElo,data=train.data)
summary(players_no_outliers.lm9) #mean_cp, elo, oppelo, mean_cp*oppelo, elo*oppelo significant
players_no_outliers.lm10 <- lm(Std_CP~Mean_CP,data=train.data)
summary(players_no_outliers.lm10)
predictions3 <- players_no_outliers.lm7 %>% predict(test.data)
p3=data.frame(
RMSE = RMSE(predictions3, test.data$Std_CP),
R2 = R2(predictions3, test.data$Std_CP)
)
predictions4 <- players_no_outliers.lm8 %>% predict(test.data)
p4=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
predictions5 <- players_no_outliers.lm9 %>% predict(test.data)
p5=data.frame(
RMSE = RMSE(predictions5, test.data$Std_CP),
R2 = R2(predictions5, test.data$Std_CP)
)
predictions6 <- players_no_outliers.lm10 %>% predict(test.data)
p6=data.frame(
RMSE = RMSE(predictions6, test.data$Std_CP),
R2 = R2(predictions6, test.data$Std_CP)
)
p3
p4 ## best model
p5
p6
AIC(players_no_outliers.lm5,players_no_outliers.lm6,players_no_outliers.lm7,players_no_outliers.lm8,players_no_outliers.lm9)
AIC(players_no_outliers.lm7,players_no_outliers.lm8,players_no_outliers.lm9,players_no_outliers.lm10)
## normalized lin reg ##
players.norm <- players
players.norm$Mean_CP <- log(players$Mean_CP)
players.norm$Std_CP <- log(players$Std_CP)
## normalized lin reg ##
players.norm <- players
players.norm$Mean_CP <- log(players$Mean_CP)
players.norm$Std_CP <- log(players$Std_CP)
## mean_cp
training.samples <- players.norm$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players.norm[training.samples, ]
test.data <- players.norm[-training.samples, ]
players.norm.lm1 <- lm(Mean_CP~.,data=train.data)
summary(players.norm.lm1) # Age, Time, Std_CP, Elo, WL, WhiteWL significant
vif(players.norm.lm1) #age, time, WL, WhiteWL need to be removed
vif(players.norm.lm1) #age, time need to be removed
players.norm.lm2 <- lm(Mean_CP~Std_CP + Elo + WL + WhiteWL,data=train.data)
summary(players.norm.lm2) # Std_CP, Elo significant
vif(players.norm.lm2) #looks good now
players.norm.lm3 <- lm(Mean_CP~(Std_CP + Elo + WL + WhiteWL)^2,
data=train.data)
summary(players.norm.lm3) ## no interactions are significant
players.norm.lm4 <- lm(Mean_CP~(Std_CP + Elo)^2,
data=train.data)
summary(players.norm.lm4)
players.norm.lm5 <- lm(Mean_CP~Std_CP + Elo + Std_CP*Elo,
data=train.data)
summary(players.norm.lm5) # std_cp, elo, std_cp*elo significant
predictions1 <- players.lm2 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions1, test.data$Mean_CP),
R2 = R2(predictions1, test.data$Mean_CP)
)
predictions2 <- players.lm4 %>% predict(test.data)
p2=data.frame(
RMSE = RMSE(predictions2, test.data$Mean_CP),
R2 = R2(predictions2, test.data$Mean_CP)
)
predictions3 <- players.lm5 %>% predict(test.data)
p3=data.frame(
RMSE = RMSE(predictions3, test.data$Mean_CP),
R2 = R2(predictions3, test.data$Mean_CP)
)
predictions1 <- players.norm.lm2 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions1, test.data$Mean_CP),
R2 = R2(predictions1, test.data$Mean_CP)
)
predictions2 <- players.norm.lm4 %>% predict(test.data)
p2=data.frame(
RMSE = RMSE(predictions2, test.data$Mean_CP),
R2 = R2(predictions2, test.data$Mean_CP)
)
predictions3 <- players.norm.lm5 %>% predict(test.data)
p3=data.frame(
RMSE = RMSE(predictions3, test.data$Mean_CP),
R2 = R2(predictions3, test.data$Mean_CP)
)
p1
p2 ##best model (though, marginally)
p3
AIC(players.norm.lm2,players.norm.lm4,players.norm.lm5)
## std_cp
training.samples <- players$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
## std_cp
training.samples <- players.norm$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players.norm[training.samples, ]
test.data <- players.norm[-training.samples, ]
players.norm.lm6 <- lm(Std_CP~.,data=train.data)
summary(players.norm.lm6) ##only mean_cp significant
vif(players.norm.lm6) ##age, time, WL, WhiteWL need to be removed
vif(players.norm.lm6) ##age, time, WL, WhiteWL need to be removed
players.norm.lm7 <- lm(Std_CP~Mean_CP + Elo + WhiteWL,data=train.data)
summary(players.norm.lm7) ##mean_cp, Elo significant
vif(players.norm.lm7) ##looks good now
players.norm.lm8 <- lm(Std_CP~(Mean_CP + Elo + WhiteWL)^2,data=train.data)
summary(players.norm.lm8) ##mean_cp, elo, oppelo, mean_cp*elo, elo*oppelo significant
players.norm.lm9 <- lm(Std_CP~Mean_CP + WhiteWL + Mean_CP*WhiteWL,
data=train.data)
summary(players.norm.lm9) ##elo, oppelo, elo*oppelo significant
players.norm.lm9 <- lm(Std_CP~Mean_CP + WhiteWL + Mean_CP*WhiteWL,
data=train.data)
summary(players.norm.lm9) ##elo, oppelo, elo*oppelo significant
predictions4 <- players.norm.lm7 %>% predict(test.data)
p4=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
predictions5 <- players.norm.lm8 %>% predict(test.data)
p5=data.frame(
RMSE = RMSE(predictions5, test.data$Std_CP),
R2 = R2(predictions5, test.data$Std_CP)
)
predictions6 <- players.norm.lm9 %>% predict(test.data)
p6=data.frame(
RMSE = RMSE(predictions6, test.data$Std_CP),
R2 = R2(predictions6, test.data$Std_CP)
)
p4
p5 ## best model
p6
AIC(players.norm.lm7,players.norm.lm8,players.norm.lm9)
## normalized + remove outliers ##
Q <- quantile(players.norm$Mean_CP, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(players.norm$Mean_CP)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
mean_eliminated <- subset(players.norm, players.norm$Mean_CP > (Q[1] - 1.5*iqr) & players.norm$Mean_CP < (Q[2]+1.5*iqr))
Q <- quantile(mean_eliminated$Std_CP, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(mean_eliminated$Std_CP)
up <-  Q[2]+1.5*iqr
low<- Q[1]-1.5*iqr
players_no_outliers_norm <- subset(mean_eliminated, mean_eliminated$Std_CP > (Q[1] - 1.5*iqr) & mean_eliminated$Std_CP < (Q[2]+1.5*iqr))
## mean_cp
training.samples <- players_no_outliers_norm$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players_no_outliers_norm[training.samples, ]
test.data <- players_no_outliers_norm[-training.samples, ]
players_no_outliers_norm.lm1 <- lm(Mean_CP~.,data=train.data)
summary(players_no_outliers_norm.lm1) # Age, Time, Std_CP, Elo, WL, WhiteWL significant
vif(players_no_outliers_norm.lm1) #age, time need to be removed
players_no_outliers_norm.lm2 <- lm(Mean_CP~Std_CP + Elo,data=train.data)
summary(players_no_outliers_norm.lm2) # Std_CP, Elo, WL, WhiteWL significant
vif(players_no_outliers_norm.lm2) #WL, WhiteWL need to be removed
players_no_outliers_norm.lm3 <- lm(Mean_CP~(Std_CP + Elo)^2,
data=train.data)
summary(players_no_outliers_norm.lm3) # Std_CP, Elo significant
vif(players_no_outliers_norm.lm3) # looks good now
players_no_outliers_norm.lm3 <- lm(Mean_CP~(Std_CP + Elo)^2,
data=train.data)
summary(players_no_outliers_norm.lm3) # Std_CP, Elo significant
players_no_outliers_norm.lm4 <- lm(Mean_CP~Std_CP + Elo + Std_CP*Elo,
data=train.data)
summary(players_no_outliers_norm.lm4) ## no interactions are significant
predictions1 <- players_no_outliers_norm.lm2 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions1, test.data$Mean_CP),
R2 = R2(predictions1, test.data$Mean_CP)
)
predictions2 <- players_no_outliers_norm.lm3 %>% predict(test.data)
p2=data.frame(
RMSE = RMSE(predictions2, test.data$Mean_CP),
R2 = R2(predictions2, test.data$Mean_CP)
)
predictions3 <- players_no_outliers_norm.lm4 %>% predict(test.data)
p3=data.frame(
RMSE = RMSE(predictions3, test.data$Mean_CP),
R2 = R2(predictions3, test.data$Mean_CP)
)
p1
p2 ##best model (though, marginally)
p3
AIC(players_no_outliers_norm.lm2,players_no_outliers_norm.lm3,players_no_outliers_norm.lm4)
## std_cp
training.samples <- players_no_outliers_norm$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players_no_outliers_norm[training.samples, ]
test.data <- players_no_outliers_norm[-training.samples, ]
players_no_outliers_norm.lm5 <- lm(Std_CP~.,data=train.data)
summary(players_no_outliers_norm.lm5) #mean_cp, oppelo significant
vif(players_no_outliers_norm.lm5) #age, time need to be removed
players_no_outliers_norm.lm6 <- lm(Std_CP~Mean_CP + Elo + OppElo + WhiteWL,data=train.data)
summary(players_no_outliers_norm.lm6) #only mean_cp, oppelo significant
summary(players_no_outliers_norm.lm6) #only mean_cp, elo significant
vif(players_no_outliers_norm.lm6) #WL, WhiteWL needs to be removed
players_no_outliers_norm.lm7 <- lm(Std_CP~(Mean_CP + Elo + OppElo + WhiteWL)^2,data=train.data)
summary(players_no_outliers_norm.lm7) #only mean_cp significant
vif(players_no_outliers_norm.lm7) #looks good now
players_no_outliers_norm.lm8 <- lm(Std_CP~Mean_CP + Elo + OppElo + Elo*OppElo,data=train.data)
summary(players_no_outliers_norm.lm8) #mean_cp, elo, oppelo, mean_cp*oppelo, elo*oppelo significant
players_no_outliers_norm.lm9 <- lm(Std_CP~Mean_CP + Elo,data=train.data)
summary(players_no_outliers_norm.lm9) #mean_cp, elo, oppelo, mean_cp*oppelo, elo*oppelo significant
players_no_outliers_norm.lm10 <- lm(Std_CP~Mean_CP + Elo + WhiteWL,data=train.data)
summary(players_no_outliers_norm.lm10)
vif(players_no_outliers_norm.lm10)
players_no_outliers_norm.lm10 <- lm(Std_CP~(Mean_CP + Elo)^2,data=train.data)
summary(players_no_outliers_norm.lm10)
predictions4 <- players_no_outliers_norm.lm6 %>% predict(test.data)
p4=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
predictions5 <- players_no_outliers_norm.lm7 %>% predict(test.data)
p5=data.frame(
RMSE = RMSE(predictions5, test.data$Std_CP),
R2 = R2(predictions5, test.data$Std_CP)
)
predictions6 <- players_no_outliers_norm.lm8 %>% predict(test.data)
p6=data.frame(
RMSE = RMSE(predictions6, test.data$Std_CP),
R2 = R2(predictions6, test.data$Std_CP)
)
predictions7 <- players_no_outliers_norm.lm9 %>% predict(test.data)
p7=data.frame(
RMSE = RMSE(predictions7, test.data$Std_CP),
R2 = R2(predictions7, test.data$Std_CP)
)
predictions4 <- players_no_outliers_norm.lm6 %>% predict(test.data)
p4=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
predictions5 <- players_no_outliers_norm.lm7 %>% predict(test.data)
p5=data.frame(
RMSE = RMSE(predictions5, test.data$Std_CP),
R2 = R2(predictions5, test.data$Std_CP)
)
predictions6 <- players_no_outliers_norm.lm8 %>% predict(test.data)
p6=data.frame(
RMSE = RMSE(predictions6, test.data$Std_CP),
R2 = R2(predictions6, test.data$Std_CP)
)
predictions7 <- players_no_outliers_norm.lm9 %>% predict(test.data)
p7=data.frame(
RMSE = RMSE(predictions7, test.data$Std_CP),
R2 = R2(predictions7, test.data$Std_CP)
)
p4 ## best model
p5
p6
p7
AIC(players_no_outliers_norm.lm6,players_no_outliers_norm.lm7,players_no_outliers_norm.lm8,players_no_outliers_norm.lm9)
>>>>>>> 97f8be49bc918da325bd0a42cd8e619a23eb0bea
