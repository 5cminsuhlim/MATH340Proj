library(mvtnorm)
library(plotly)
library(MASS)
library(ggplot2)
sigma <- matrix(c(4,2,2,3), ncol = 2)
sigma
means <- c(0, 0)
n <- 1000
set.seed(42)
x <- rmvnorm(n = n, mean = means, sigma = sigma)
str(x)
head(x)
d <- data.frame(x)
names(d)
## marginal of X1
d %>%
ggplot(aes(x = X1)) +
geom_density()
p1 <- data_frame(x = -3:3) %>%
ggplot(aes(x = x)) +
stat_function(fun = dnorm, n = n)
p1
p2 <- ggplot(d, aes(x = X1, y = X2)) +
geom_point(alpha = .5) +
geom_density_2d()
p2
p3 <- ggplot(d, aes(x = X1, y = X2)) +
geom_point(alpha = .5) +
geom_bin2d() +
scale_fill_viridis_c()
p3
(p <- plot_ly(d, x = ~X1, y = ~X2))
add_histogram2d(p)
add_histogram2dcontour(p)
dens <- kde2d(d$X1, d$X2)
plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
d$dens <- dmvnorm(x = d)
p4 <- plot_ly(d, x = ~ X1, y = ~ X2, z = ~ dens,
marker = list(color = ~ dens,
showscale = TRUE)) %>%
add_markers()
p4
dens <- kde2d(d$X1, d$X2)
plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
add_histogram2dcontour(p)
dens <- kde2d(d$X1, d$X2)
plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
add_histogram2dcontour(p)
d$dens <- dmvnorm(x = d)
p4 <- plot_ly(d, x = ~ X1, y = ~ X2, z = ~ dens,
marker = list(color = ~ dens,
showscale = TRUE)) %>%
add_markers()
p4
(p <- plot_ly(d, x = ~X1, y = ~X2))
add_histogram2d(p)
p4 <- plot_ly(d, x = ~ X1, y = ~ X2, z = ~ dens,
marker = list(color = ~ dens,
showscale = TRUE)) %>%
add_markers()
p4
?pbinom
rnorm(10000, 272, 13.4)
x <- rnorm(10000, 272, 13.4)
length(X < 290)
length(x < 290 & x > 250)
length(x)
length(x < 290)
df <- data.frame(X = rnorm(10000, 272, 13.4))
length(df[df$X < 290 & df$X > 250,]$X)/length(df$X)
df$X < 290
length(df$X)
df[df$X < 290,]
df[df$X < 290,]$X
length(df[df$X < 290 & df$X > 250,])/length(df$X)
pbinom(290, 800, 0.34) - pbinom(250, 800, 0.34)
?rexp
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
plot(players[1])
players[]
players[1
]
setwd("C:/Users/Dan Lim/Desktop/MATH340Proj/code")
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
players[1]
players
hist(players$Age)
hist(players$Mean_CP)
dat[1]
dat[2]
View(dat)
View(players)
## EDA
hist(players$Age)
hist(players$Mean_CP)
hist(players$Std_CP)
View(players)
any(players$Elo == 0)
players[players$Elo == 0,]
unique(players[players$Elo == 0,]$Name)
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
## EDA
hist(players$Age)
hist(players$Mean_CP)
hist(players$Std_CP)
hist(players$Elo)
unique(players[players$Elo == 0,]$Name)
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
unique(players[players$Elo == 0,]$Name)
## EDA
hist(players$Age)
hist(players$Mean_CP)
hist(players$Std_CP)
hist(players$Elo)
min(players$Elo)
players[players$Elo==1592,]$Name
hist(sqrt(players$Elo))
?sqrt
## ord reg
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
players2.lm <- lm(players$Std_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players2.lm)
## ordinal reg
library(MASS)
library(RStata)
library(modelsummary)
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord2 <- polr(WhiteWL ~ Elo + OppElo, data=players)
summary(players.ord2)
(ctable <- coef(summary(players.ord2)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
mod = list("POLR_WL" = players.ord,
"POLR_WhiteWL" = players.ord2)
modelsummary(mod, stars = TRUE)
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
p
niemann.lm <- lm(niemann$Std_CP ~ niemann$Age + niemann$Elo + niemann$OppElo + niemann$WL)
summary(niemann.lm)
dat[4]
dat[20]
dat[21]
dat[22]
niemann <- dat[22]
niemann.lm <- lm(niemann$Std_CP ~ niemann$Age + niemann$Elo + niemann$OppElo + niemann$WL)
summary(niemann.lm)
plot(niemann.lm)
niemann.lm <- lm(niemann$Std_CP ~ niemann$Age + niemann$Elo + niemann$OppElo + niemann$WL)
niemann
## individually
anand <- dat[1]
View(anand)
## individually
anand <- data.frame(dat[1])
View(anand)
View(dat)
## individually
anand <- bind_rows(dat[1], .id = "column_label")
View(anand)
## individually
anand <- dat[1][0]
## individually
anand <- dat[1]
View(anand)
dat[1]
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
dat[1]
dat[2]
## individually
anand <- dat[2]
View(anand)
## individually
anand <- bind_rows(dat[2])
View(anand)
players <- bind_rows(dat)
View(players)
players <- bind_rows(dat, .id = "column_label")
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
andreikin <- bind_rows(dat[3])
View(andreikin)
anand <- bind_rows(dat[2])
andreikin <- bind_rows(dat[3])
aronian <- bind_rows(dat[4])
bu <- bind_rows(dat[5])
carlsen <- bind_rows(dat[6])
caruana <- bind_rows(dat[7])
ding <- bind_rows(dat[8])
dominguezPerez <- bind_rows(dat[9])
duda <- bind_rows(dat[10])
eljanov <- bind_rows(dat[11])
erigaisi <- bind_rows(dat[12])
firouzja <- bind_rows(dat[13])
giri <- bind_rows(dat[14])
gukesh <- bind_rows(dat[15])
harikrishna <- bind_rows(dat[16])
karjakin <- bind_rows(dat[17])
le <- bind_rows(dat[18])
mamedyarov <- bind_rows(dat[19])
nakamura <- bind_rows(dat[20])
nepo <- bind_rows(dat[21])
niemann <- bind_rows(dat[22])
rapport <- bind_rows(dat[23])
so <- bind_rows(dat[24])
tomashevsky <- bind_rows(dat[25])
topalov <- bind_rows(dat[26])
vachierLagrave <- bind_rows(dat[27])
vallejoPons <- bind_rows(dat[28])
vitiugov <- bind_rows(dat[29])
wangH <- bind_rows(dat[30])
wei <- bind_rows(dat[31])
yu <- bind_rows(dat[32])
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
individuals <- c(anand, andreikin, aronian, bu, carlsen, caruana,
ding, dominguezPerez, duda, eljanov, erigaisi,
firouzja, giri, gukesh, harikrishna, karjakin, le,
mamedyarov, nakamura, nepo, niemann, rapport, so,
tomashevsky, topalov, vachierLagrave, vallejoPons,
vitiugov, wangH, wei, yu)
View(individuals)
individuals$X
(individuals,hist())
lapply(individuals,hist())
lapply(individuals,hist(Mean_CP))
lapply(individuals,hist($Mean_CP))
lapply(individuals,hist(individuals$Mean_CP))
unique(players$Name)
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
names <- unique(players$Name)
lower(players$Name)
tolower(unique(players$Name))
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
names <- tolower(unique(players$Name))
for (name in names) {
hist(players[players$Name == name,]$Mean_CP)
}
players[players$Name==name,]$Mean_CP
name <- 'anand'
players[players$Name==name,]$Mean_CP
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
names <- unique(players$Name)
for (name in names) {
hist(players[players$Name == name,]$Mean_CP)
}
name + h
name + "H"
names(players)
names(players$Name)
concat
?concat
paste("hi" + name)
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for ", name))
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", name))
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", name))
}
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
}
## EDA
## normalize (for right skewed)
## square/cube (for left skewed)
library(stringr)
names <- unique(players$Name)
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
}
names(players)
# w/ normalization
for (name in names) {
hist(log(players[players$Name == name,]$Mean_CP), main=paste("Mean CP Histogram for", str_to_title(name)))
#hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
#hist(players[players$Name == name,]$Elo, main=paste("Elo Histogram for", str_to_title(name)))
}
# w/o normalization
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Elo, main=paste("Elo Histogram for", str_to_title(name)))
}
# w/ normalization
for (name in names) {
hist(log(players[players$Name == name,]$Mean_CP), main=paste("Mean CP Histogram for", str_to_title(name)))
hist(log(players[players$Name == name,]$Std_CP), main=paste("StD CP Histogram for", str_to_title(name)))
#hist(players[players$Name == name,]$Elo, main=paste("Elo Histogram for", str_to_title(name)))
}
# w/o normalization
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Elo, main=paste("Elo Histogram for", str_to_title(name)))
}
# w/ normalization
players$Mean_CP <- log(players$Mean_CP)
players$Std_CP <- log(players$Std_CP)
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
}
## lin reg (mean_cp)
for (name in names) {
p.lm <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
summary(p.lm)
}
summary(p.lm)
paste(name,".lm") <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
plot(p.lm)
plot(p.lm)
# w/o normalization
par(mfrow=c(2,2))
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
}
# w/o normalization
par(mfrow=c(2,1))
for (name in names) {
hist(players[players$Name == name,]$Mean_CP, main=paste("Mean CP Histogram for", str_to_title(name)))
hist(players[players$Name == name,]$Std_CP, main=paste("StD CP Histogram for", str_to_title(name)))
}
## lin reg (mean_cp)
par(mfrow=c(2,2))
for (name in names) {
p.lm <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
summary(p.lm)
plot(p.lm)
}
print(summary(p.lm))
for (name in names) {
p.lm <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
print(summary(p.lm))
plot(p.lm)
}
print(name, summary(p.lm))
for (name in names) {
p.lm <- lm(Mean_CP ~ Age + Elo + OppElo, data=players[players$Name == name,])
print(name)
print(summary(p.lm))
plot(p.lm)
}
## EDA
hist(players$Mean_CP)
hist(players$Std_CP)
## EDA
par(mfrow=c(2,1))
hist(players$Mean_CP)
hist(players$Std_CP)
shapiro.test(players$Mean_CP)
?sample
rand_samp <- sample(players$Mean_CP, 5000)
shapiro.test(players$Mean_CP)
rand_samp <- sample(players$Mean_CP, 4999)
shapiro.test(players$Mean_CP)
rand_samp <- sample(players$Mean_CP, 5000)
shapiro.test(rand_samp)
## EDA
par(mfrow=c(2,1))
hist(players$Mean_CP)
hist(players$Std_CP)
rand_samp_std <- sample(players$Std_CP, 5000)
shapiro.test(rand_samp_std)
qqplot(players$Mean_CP)
qqline(players$Mean_CP)
qqnorm(players$Mean_CP)
qqline(players$Mean_CP, col = "red", lwd = 2)
qqnorm(players$Std_CP)
qqline(players$Std_CP, col = "red", lwd = 2)
## EDA
library(LambertW)
test_norm(players$Std_CP)
test_norm(players$Mean_CP)
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
players2.lm <- lm(players$Std_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players2.lm)
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
## ordinal reg
library(MASS)
library(RStata)
library(modelsummary)
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
## lin reg
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord2 <- polr(WhiteWL ~ Elo + OppElo, data=players)
summary(players.ord2)
(ctable <- coef(summary(players.ord2)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord2 <- polr(WhiteWL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord2)
(ctable <- coef(summary(players.ord2)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
## time
players3.lm <- lm(players$Mean_CP ~ players$Time + players$Elo + players$OppElo + players$WL)
summary(players3.lm)
players4.lm <- lm(players$Std_CP ~ players$Time + players$Elo + players$OppElo + players$WL)
summary(players4.lm)
## time
players.ord3 <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord3)
(ctable <- coef(summary(players.ord3)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord4 <- polr(WhiteWL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord4)
(ctable <- coef(summary(players.ord4)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
## age
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
players2.lm <- lm(players$Std_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players2.lm)
## age
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm) ## intercept, elo, WL0, WL1
## time
players3.lm <- lm(players$Mean_CP ~ players$Time + players$Elo + players$OppElo + players$WL)
summary(players3.lm) ## intercept, elo, WL0, WL1
summary(players4.lm)
players4.lm <- lm(players$Std_CP ~ players$Time + players$Elo + players$OppElo + players$WL)
summary(players4.lm)
## age
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord2 <- polr(WhiteWL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord2)
(ctable <- coef(summary(players.ord2)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
## time
players.ord3 <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord3)
(ctable <- coef(summary(players.ord3)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
players.ord4 <- polr(WhiteWL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord4)
(ctable <- coef(summary(players.ord4)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
## model summary
mod = list("POLR_WL_age" = players.ord,
"POLR_WhiteWL_age" = players.ord2,
"POLR_WL_time" = players.ord3,
"POLR_WhiteWL_time" = players.ord4)
modelsummary(mod, stars = TRUE)
?vif
??vif
