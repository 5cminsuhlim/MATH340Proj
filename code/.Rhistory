drop_na(df)
# SOMETIME PANDAS READS COLUMNS IN AS STRINGS RATHER THAN NUMBERS
# INSERT CODE TO TYPE-CAST ALL OF THE FOLLOWING COLUMNS AS FLOATS
# ["customer_id","age_years","account_balance_usd","yearly_income_usd","housing_payment_usd"]
df <- df %>% mutate_at(c("customer_id","age_years","account_balance_usd","yearly_income_usd","housing_payment_usd"), as.numeric)
# INSERT CODE TO COMPUTE AND PRINT THE MEAN,MEDIAN, AND STD DOWN THE COLUMNS (DO EACH IN ITS OWN CELL)
# NOTICE THAT ONLY THE NUMERICAL ROWS ARE COMPUTED (YOU CAN IGNORE ANY DEPRECATION WARNINGS)
# print((df[["age_years","account_balance_usd"]]).mean(axis=1))
#MEAN
df %>% summarize_if(is.numeric, mean, na.rm=T)
#MEDIAN
df %>% summarize_if(is.numeric, median, na.rm=T)
#STD
df %>% summarize_if(is.numeric, sd, na.rm=T)
# INSERT CODE TO REPLACE ANY "NaN" in "age_years" WITH THE AVERAGE
df$age_years[is.nan(df$age_years)] <- mean(df$age_years, na.rm=T)
# INSERT CODE TO REPLACE ANY "NaN" in "yearly_income_usd" WITH THE MEDIAN
df$yearly_income_usd[is.nan(df$yearly_income_usd)] <- median(df$yearly_income_usd, na.rm=T)
# print the dataframe
df
# INSERT CODE TO THROW AWAY ANY ROW WITH "NaN"
# THIS TIME RE-DEFINE THE DATAFRAME WITHOUT THE "NaN"
# hint: read the documentation https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dropna.html
df <- drop_na(df)
# print the dataframe
df
# INSERT CODE TO REMOVE ROWS WITH DUPLICATES IN "customer_id" (KEEP THE FIRST VALUE ENCOUNTERS)
df <- df %>% distinct(customer_id, .keep_all=T)
# PRINT THE DATAFRAME
df
# INSERT CODE TO NORMALIZE THE COLUMN "housing_payment_usd"
mean_housing <- mean(df$housing_payment_usd, na.rm=T)
std_housing <- sd(df$housing_payment_usd, na.rm=T)
df$housing_payment_usd <- sapply(df$housing_payment_usd, function(x) (x - mean_housing) / std_housing)
# INSERT CODE TO RENAME THE COLUMN "housing_payment_usd" --> "housing_payment_normalized"
df <- rename(df, housing_payment_normalized = housing_payment_usd)
# PRINT THE DATA FRAME
df
remove.packages('rlang')
install.packages('rlang')
one.dice <- function(){
dice <- sample(1:6, size = 1, replace = TRUE)
return(dice)
}
one.dice() #what is happening here?? try this several times.
#what is hapening here?
par(mfrow=c(2,2))
for (i in 1:4){
sims <- replicate(100, one.dice())
table(sims)
table(sims)/length(sims)
plot(table(sims), xlab = 'Event', ylab = 'Frequency')
}
#what is hapening here?
par(mfrow=c(2,2))
for (i in 1:4){
sims <- replicate(10000, one.dice())
table(sims)
table(sims)/length(sims)
plot(table(sims), xlab = 'Event', ylab = 'Frequency')
}
dev.off()
dmultinom(x=c(1,2,0), prob = c(0.6,0.2,0.2))
set.seed(123)
my_prob <- c(0.6, 0.2, 0.2)
number_of_experiments <- 10000
number_of_samples <- 10
experiments <- rmultinom(n=number_of_experiments, size=number_of_samples, prob=my_prob)
df <- data.frame(experiments)
dfM <- data.frame(experiments)/number_of_samples
hist(dfM[, 1])
library(tidyverse)
library(mvtnorm)
library(plotly)
library(MASS)
library(ggplot2)
sigma <- matrix(c(4,2,2,3), ncol = 2)
sigma
means <- c(0, 0)
n <- 1000
set.seed(42)
x <- rmvnorm(n = n, mean = means, sigma = sigma)
str(x)
head(x)
d <- data.frame(x)
names(d)
## marginal of X1
d %>%
ggplot(aes(x = X1)) +
geom_density()
p1 <- data_frame(x = -3:3) %>%
ggplot(aes(x = x)) +
stat_function(fun = dnorm, n = n)
p1
p2 <- ggplot(d, aes(x = X1, y = X2)) +
geom_point(alpha = .5) +
geom_density_2d()
p2
p3 <- ggplot(d, aes(x = X1, y = X2)) +
geom_point(alpha = .5) +
geom_bin2d() +
scale_fill_viridis_c()
p3
(p <- plot_ly(d, x = ~X1, y = ~X2))
add_histogram2d(p)
add_histogram2dcontour(p)
dens <- kde2d(d$X1, d$X2)
plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
d$dens <- dmvnorm(x = d)
p4 <- plot_ly(d, x = ~ X1, y = ~ X2, z = ~ dens,
marker = list(color = ~ dens,
showscale = TRUE)) %>%
add_markers()
p4
dens <- kde2d(d$X1, d$X2)
plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
add_histogram2dcontour(p)
dens <- kde2d(d$X1, d$X2)
plot_ly(x = dens$x,
y = dens$y,
z = dens$z) %>% add_surface()
add_histogram2dcontour(p)
d$dens <- dmvnorm(x = d)
p4 <- plot_ly(d, x = ~ X1, y = ~ X2, z = ~ dens,
marker = list(color = ~ dens,
showscale = TRUE)) %>%
add_markers()
p4
(p <- plot_ly(d, x = ~X1, y = ~X2))
add_histogram2d(p)
p4 <- plot_ly(d, x = ~ X1, y = ~ X2, z = ~ dens,
marker = list(color = ~ dens,
showscale = TRUE)) %>%
add_markers()
p4
?pbinom
rnorm(10000, 272, 13.4)
x <- rnorm(10000, 272, 13.4)
length(X < 290)
length(x < 290 & x > 250)
length(x)
length(x < 290)
df <- data.frame(X = rnorm(10000, 272, 13.4))
length(df[df$X < 290 & df$X > 250,]$X)/length(df$X)
df$X < 290
length(df$X)
df[df$X < 290,]
df[df$X < 290,]$X
length(df[df$X < 290 & df$X > 250,])/length(df$X)
pbinom(290, 800, 0.34) - pbinom(250, 800, 0.34)
?rexp
setwd("C:/Users/Dan Lim/Desktop/MATH340Proj/code")
extractAIC(players.ord)
## MAKE SURE TO SETWD TO INSIDE CODE FOLDER
## only over-the-board games
## mean_cp_less = beta_0 + beta_1 * age + beta_2 * time + beta_3 * elo + beta_4 * oppelo
## std_cp_less = beta_0 + beta_1 * age + beta_2 * time + beta_3 * elo + beta_4 * oppelo
## win vs. not win = beta_0 + beta_1 * blackelo + beta_2 * white_elo
##
carlsen <- read.csv('../data/carlsen.csv')
erigaisi <- read.csv('../data/erigaisi.csv')
gukesh <- read.csv('../data/gukesh.csv')
nepo <- read.csv('../data/nepo.csv')
niemann <- read.csv('../data/niemann.csv')
## EDA
par(mfrow=c(2,3))
plot(carlsen$Mean_CP, carlsen$Std_CP)
plot(nepo$Mean_CP, nepo$Std_CP)
plot(gukesh$Mean_CP, gukesh$Std_CP)
plot(erigaisi$Mean_CP, erigaisi$Std_CP)
plot(niemann$Mean_CP, niemann$Std_CP)
dev.off()
par(mfrow=c(2,3))
plot(carlsen$Elo, carlsen$Mean_CP)
plot(nepo$Elo, nepo$Mean_CP)
plot(gukesh$Elo, gukesh$Mean_CP)
plot(erigaisi$Elo, erigaisi$Mean_CP)
plot(niemann$Elo, niemann$Mean_CP)
dev.off()
par(mfrow=c(2,3))
boxplot(carlsen$Mean_CP)
boxplot(nepo$Mean_CP)
boxplot(gukesh$Mean_CP)
boxplot(erigaisi$Mean_CP)
boxplot(niemann$Mean_CP)
dev.off()
par(mfrow=c(2,3))
boxplot(carlsen$Std_CP)
boxplot(nepo$Std_CP)
boxplot(gukesh$Std_CP)
boxplot(erigaisi$Std_CP)
boxplot(niemann$Std_CP)
dev.off()
## lin reg 1
carlsen.lm <- lm(carlsen$Std_CP ~ carlsen$Age + carlsen$Elo + carlsen$OppElo + carlsen$WL)
summary(carlsen.lm)
plot(carlsen.lm)
gukesh.lm <- lm(gukesh$Std_CP ~ gukesh$Age + gukesh$Elo + gukesh$OppElo + gukesh$WL)
summary(gukesh.lm)
plot(gukesh.lm)
niemann.lm <- lm(niemann$Std_CP ~ niemann$Age + niemann$Elo + niemann$OppElo + niemann$WL)
summary(niemann.lm)
plot(niemann.lm)
plot(carlsen2.lm)
## cumulative linear reg
players <- rbind(carlsen, erigaisi, gukesh, nepo, niemann)
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
players2.lm <- lm(players$Std_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players2.lm)
library(MASS)
players.ord <- polr(WL ~ Elo + OppElo, data=players)
extractAIC(players.ord)
summary(players.ord)
players.ord2 <- polr(WL ~ Elo * OppElo, data=players)
summary(players.ord2)
library(MASS)
players.ord <- polr(WL ~ Elo + OppElo, data=players)
summary(players.ord)
## ordinal reg, go through every player, get white black elo, win loss for white ## ERIC
players.ord2 <- polr(WhiteWL ~ Elo + OppElo, data=players)
summary(players.ord2)
summary(players.ord)
summary(players.ord2)
library(MASS)
players.ord <- polr(WL ~ Elo + OppElo, data=players)
summary(players.ord)
View(players)
as.numeric(players$WL)
## MAKE SURE TO SETWD TO INSIDE CODE FOLDER
## means
carlsen_mean <- read.csv('../output/mean_cp_loss/carlsen.csv')
erigaisi_mean <- read.csv('../output/mean_cp_loss/erigaisi.csv')
gukesh_mean <- read.csv('../output/mean_cp_loss/gukesh.csv')
nepo_mean <- read.csv('../output/mean_cp_loss/nepo.csv')
niemann_mean <- read.csv('../output/mean_cp_loss/niemann.csv')
## remove NAs
carlsen_mean <- carlsen_mean[complete.cases(carlsen_mean), ]
erigaisi_mean <- erigaisi_mean[complete.cases(erigaisi_mean), ]
gukesh_mean <- gukesh_mean[complete.cases(gukesh_mean), ]
nepo_mean <- nepo_mean[complete.cases(nepo_mean), ]
niemann_mean <- niemann_mean[complete.cases(niemann_mean), ]
## std
carlsen_std <- read.csv('../output/std_cp_loss/carlsen.csv')
erigaisi_std <- read.csv('../output/std_cp_loss/erigaisi.csv')
gukesh_std <- read.csv('../output/std_cp_loss/gukesh.csv')
nepo_std <- read.csv('../output/std_cp_loss/nepo.csv')
niemann_std <- read.csv('../output/std_cp_loss/niemann.csv')
## remove NAs
carlsen_std <- carlsen_std[complete.cases(carlsen_std), ]
erigaisi_std <- erigaisi_std[complete.cases(erigaisi_std), ]
gukesh_std <- gukesh_std[complete.cases(gukesh_std), ]
nepo_std <- nepo_std[complete.cases(nepo_std), ]
niemann_std <- niemann_std[complete.cases(niemann_std), ]
## elo
carlsen_elo <- read.csv('../output/elo/carlsen.csv')
erigaisi_elo <- read.csv('../output/elo/erigaisi.csv')
gukesh_elo <- read.csv('../output/elo/gukesh.csv')
nepo_elo <- read.csv('../output/elo/nepo.csv')
niemann_elo <- read.csv('../output/elo/niemann.csv')
## remove empty rows
erigaisi_elo <- subset(erigaisi_elo, Elo!=0)
gukesh_elo <- subset(gukesh_elo, Elo!=0)
niemann_elo <- subset(niemann_elo, Elo!=0)
## remove NAs
carlsen_elo <- na.omit(carlsen_elo)
erigaisi_elo <- na.omit(erigaisi_elo)
gukesh_elo <- na.omit(gukesh_elo)
nepo_elo <- na.omit(nepo_elo)
niemann_elo <- na.omit(niemann_elo)
## age
carlsen_age <- data.frame(Age=c(rep(29,26), rep(30,59), rep(31,36)))
erigaisi_age <- data.frame(Age=c(rep(16,26), rep(17,70), rep(18,181)))
gukesh_age <- data.frame(Age=c(rep(13,27), rep(14,27), rep(15,179), rep(16,44)))
nepo_age <- data.frame(Age=c(rep(29,7), rep(30,18), rep(31,44), rep(32,9)))
niemann_age <- data.frame(Age=c(rep(15,8), rep(16,152), rep(17,172), rep(18,26)))
## number of years playing
carlsen_time <- data.frame(Time=c(rep(21,26), rep(22,59), rep(23,36))) #https://www.britannica.com/biography/Magnus-Carlsen#:~:text=Carlsen's%20father%20first%20taught%20him,at%20the%20age%20of%20eight.
erigaisi_time <- data.frame(Time=c(rep(9,26), rep(10,70), rep(11,181))) #https://www.tepesigemanchess.com/erigaisi/
gukesh_time <- data.frame(Time=c(rep(6,27), rep(7,27), rep(8,179), rep(9,44))) #https://en.wikipedia.org/wiki/Gukesh_D#:~:text=Gukesh%20was%20born%20on%2029,at%20the%20age%20of%20seven.
nepo_time <- data.frame(Time=c(rep(25,7), rep(26,18), rep(27,44), rep(28,9))) #https://www.chess.com/players/ian-nepomniachtchi#:~:text=He%20played%20chess%20from%20a,he%20outrated%20at%20that%20point.
niemann_time <- data.frame(Time=c(rep(7,8), rep(8,152), rep(9,172), rep(10,26))) #https://www.uschesschamps.com/bio/hans-niemann-0#:~:text=Bio%3A,moved%20to%20Connecticut%20in%202015.
## player-specific win-loss
c_wl <- read.csv('../output/winloss/carlsen.csv')
e_wl <- read.csv('../output/winloss/erigaisi.csv')
g_wl <- read.csv('../output/winloss/gukesh.csv')
ne_wl <- read.csv('../output/winloss/nepo.csv')
ni_wl <- read.csv('../output/winloss/niemann.csv')
c_wl <- head(c_wl, 121)
e_wl <- head(e_wl, 277)
g_wl <- head(g_wl, 277)
ne_wl <- head(ne_wl, 78)
ni_wl <- head(ni_wl, 358)
## white win-loss
c_wl_w <- read.csv('../output/whitewinloss/carlsen.csv')
e_wl_w <- read.csv('../output/whitewinloss/erigaisi.csv')
g_wl_w <- read.csv('../output/whitewinloss/gukesh.csv')
ne_wl_w <- read.csv('../output/whitewinloss/nepo.csv')
ni_wl_w <- read.csv('../output/whitewinloss/niemann.csv')
c_wl_w <- head(c_wl_w, 121)
e_wl_w <- head(e_wl_w, 277)
g_wl_w <- head(g_wl_w, 277)
ne_wl_w <- head(ne_wl_w, 78)
ni_wl_w <- head(ni_wl_w, 358)
## merge dfs
carlsen_elo <- head(carlsen_elo, 121)
carlsen <- data.frame(Age=carlsen_age$Age, Elo=carlsen_elo$Elo, OppElo=carlsen_elo$Opp.Elo, Mean_CP=carlsen_mean$X0, Std_CP=carlsen_std$X0, Time=carlsen_time$Time, WL=c_wl$WinLoss, WhiteWL=c_wl_w$WhiteWinLoss, Name=rep('carlsen', 121))
erigaisi_elo <- head(erigaisi_elo, 277)
erigaisi <- data.frame(Age=erigaisi_age$Age, Elo=erigaisi_elo$Elo, OppElo=erigaisi_elo$Opp.Elo, Mean_CP=erigaisi_mean$X0, Std_CP=erigaisi_std$X0, Time=erigaisi_time$Time, WL=e_wl$WinLoss, WhiteWL=e_wl_w$WhiteWinLoss, Name=rep('erigaisi', 277))
gukesh_mean <- head(gukesh_mean, 277)
gukesh_std <- head(gukesh_std, 277)
gukesh <- data.frame(Age=gukesh_age$Age, Elo=gukesh_elo$Elo, OppElo=gukesh_elo$Opp.Elo, Mean_CP=gukesh_mean$X0, Std_CP=gukesh_std$X0, Time=gukesh_time$Time, WL=g_wl$WinLoss, WhiteWL=g_wl_w$WhiteWinLoss, Name=rep('gukesh', 277))
nepo <- data.frame(Age=nepo_age$Age, Elo=nepo_elo$Elo, OppElo=nepo_elo$Opp.Elo, Mean_CP=nepo_mean$X0, Std_CP=nepo_std$X0, Time=nepo_time$Time, WL=ne_wl$WinLoss, WhiteWL=ne_wl_w$WhiteWinLoss, Name=rep('nepo', 78))
niemann_mean <- head(niemann_mean, 358)
niemann_std <- head(niemann_std, 358)
niemann <- data.frame(Age=niemann_age$Age, Elo=niemann_elo$Elo, OppElo=niemann_elo$Opp.Elo, Mean_CP=niemann_mean$X0, Std_CP=niemann_std$X0, Time=niemann_time$Time, WL=ni_wl$WinLoss, WhiteWL=ni_wl_w$WhiteWinLoss, Name=rep('niemann', 358))
## export
write.csv(carlsen, '../data/carlsen.csv', row.names=F)
write.csv(erigaisi, '../data/erigaisi.csv', row.names=F)
write.csv(gukesh, '../data/gukesh.csv', row.names=F)
write.csv(nepo, '../data/nepo.csv', row.names=F)
write.csv(niemann, '../data/niemann.csv', row.names=F)
## MAKE SURE TO SETWD TO INSIDE CODE FOLDER
## only over-the-board games
## mean_cp_less = beta_0 + beta_1 * age + beta_2 * time + beta_3 * elo + beta_4 * oppelo
## std_cp_less = beta_0 + beta_1 * age + beta_2 * time + beta_3 * elo + beta_4 * oppelo
## win vs. not win = beta_0 + beta_1 * blackelo + beta_2 * white_elo
##
carlsen <- read.csv('../data/carlsen.csv')
erigaisi <- read.csv('../data/erigaisi.csv')
gukesh <- read.csv('../data/gukesh.csv')
nepo <- read.csv('../data/nepo.csv')
niemann <- read.csv('../data/niemann.csv')
## EDA
par(mfrow=c(2,3))
plot(carlsen$Mean_CP, carlsen$Std_CP)
plot(nepo$Mean_CP, nepo$Std_CP)
plot(gukesh$Mean_CP, gukesh$Std_CP)
plot(erigaisi$Mean_CP, erigaisi$Std_CP)
plot(niemann$Mean_CP, niemann$Std_CP)
dev.off()
par(mfrow=c(2,3))
plot(carlsen$Elo, carlsen$Mean_CP)
plot(nepo$Elo, nepo$Mean_CP)
plot(gukesh$Elo, gukesh$Mean_CP)
plot(erigaisi$Elo, erigaisi$Mean_CP)
plot(niemann$Elo, niemann$Mean_CP)
dev.off()
par(mfrow=c(2,3))
boxplot(carlsen$Mean_CP)
boxplot(nepo$Mean_CP)
boxplot(gukesh$Mean_CP)
boxplot(erigaisi$Mean_CP)
boxplot(niemann$Mean_CP)
dev.off()
par(mfrow=c(2,3))
boxplot(carlsen$Std_CP)
boxplot(nepo$Std_CP)
boxplot(gukesh$Std_CP)
boxplot(erigaisi$Std_CP)
boxplot(niemann$Std_CP)
dev.off()
## lin reg 1
carlsen.lm <- lm(carlsen$Std_CP ~ carlsen$Age + carlsen$Elo + carlsen$OppElo + carlsen$WL)
summary(carlsen.lm)
plot(carlsen.lm)
gukesh.lm <- lm(gukesh$Std_CP ~ gukesh$Age + gukesh$Elo + gukesh$OppElo + gukesh$WL)
summary(gukesh.lm)
plot(gukesh.lm)
niemann.lm <- lm(niemann$Std_CP ~ niemann$Age + niemann$Elo + niemann$OppElo + niemann$WL)
summary(niemann.lm)
plot(niemann.lm)
plot(carlsen2.lm)
## cumulative linear reg
players <- rbind(carlsen, erigaisi, gukesh, nepo, niemann)
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
View(players)
typeof(players$WL)
typeof(players$WhiteWL)
players.lm <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players.lm)
players2.lm <- lm(players$Std_CP ~ players$Age + players$Elo + players$OppElo + players$WL)
summary(players2.lm)
library(MASS)
players.ord <- polr(WL ~ Elo + OppElo, data=players)
summary(players.ord)
## ordinal reg, go through every player, get white black elo, win loss for white ## ERIC
players.ord2 <- polr(WhiteWL ~ Elo + OppElo, data=players)
summary(players.ord2)
library(MASS)
players.ord <- polr(WL ~ Elo + OppElo, data=players)
summary(players.ord)
qnorm(-1.706)
??qnorm
?qnorm
pnorm(-1.706)
library(stata)
library(MASS)
library(RStata)
players.ord <- polr(WL ~ Elo + OppElo, data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
x <- lm(players$Mean_CP ~ players$Age + players$Time + players$Elo + players$OppElo)
summary(x)
vif(x)
?vif
??vif
library(Car)
library(car)
vig(x)
vif(x)
y <- lm(players$Mean_CP ~ players$Time + players$Elo + players$OppElo)
vif(y)
z <- lm(players$Mean_CP ~ players$Age + players$Elo + players$OppElo)
vif(z)
## win vs. not win = beta_0 + beta_1 * blackelo + beta_2 * white_elo
##
carlsen <- read.csv('../data/carlsen.csv')
erigaisi <- read.csv('../data/erigaisi.csv')
gukesh <- read.csv('../data/gukesh.csv')
nepo <- read.csv('../data/nepo.csv')
niemann <- read.csv('../data/niemann.csv')
is.na(carlsen)
any(is.na(carlsen))
View(carlsen)
carlsen <- read.csv('../data/carlsen.csv')
erigaisi <- read.csv('../data/erigaisi.csv')
gukesh <- read.csv('../data/gukesh.csv')
nepo <- read.csv('../data/nepo.csv')
niemann <- read.csv('../data/niemann.csv')
carlsen <- read.csv('../data/carlsen.csv')
erigaisi <- read.csv('../data/erigaisi.csv')
gukesh <- read.csv('../data/gukesh.csv')
nepo <- read.csv('../data/nepo.csv')
niemann <- read.csv('../data/niemann.csv')
View(players)
carlsen <- read.csv('../data/carlsen.csv')
erigaisi <- read.csv('../data/erigaisi.csv')
gukesh <- read.csv('../data/gukesh.csv')
nepo <- read.csv('../data/nepo.csv')
niemann <- read.csv('../data/niemann.csv')
## cumulative linear reg
players <- rbind(carlsen, erigaisi, gukesh, nepo, niemann)
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
View(players)
is.na(players)
any(is.na(players))
## cumulative linear reg
players <- rbind(carlsen, erigaisi, gukesh, nepo, niemann)
## ordinal reg
library(MASS)
library(RStata)
players.ord <- polr(WL ~ Age + Elo + OppElo + , data=players)
summary(players.ord)
View(players)
carlsen <- read.csv('../data/carlsen.csv')
erigaisi <- read.csv('../data/erigaisi.csv')
gukesh <- read.csv('../data/gukesh.csv')
nepo <- read.csv('../data/nepo.csv')
niemann <- read.csv('../data/niemann.csv')
carlsen <- read.csv('../data/carlsen.csv')
erigaisi <- read.csv('../data/erigaisi.csv')
gukesh <- read.csv('../data/gukesh.csv')
nepo <- read.csv('../data/nepo.csv')
niemann <- read.csv('../data/niemann.csv')
## cumulative linear reg
players <- rbind(carlsen, erigaisi, gukesh, nepo, niemann)
## ordinal reg
library(MASS)
library(RStata)
players.ord <- polr(WL ~ Age + Elo + OppElo + , data=players)
summary(players.ord)
carlsen <- read.csv('../data/carlsen.csv')
erigaisi <- read.csv('../data/erigaisi.csv')
gukesh <- read.csv('../data/gukesh.csv')
nepo <- read.csv('../data/nepo.csv')
niemann <- read.csv('../data/niemann.csv')
## cumulative linear reg
players <- rbind(carlsen, erigaisi, gukesh, nepo, niemann)
## ordinal reg
library(MASS)
library(RStata)
players.ord <- polr(WL ~ Age + Elo + OppElo + , data=players)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players.ord <- polr(WL ~ Age + Elo + OppElo + , data=players)
players.ord <- polr(WL ~ Age + Elo + OppElo + Mean_CP + Std_CP, data=players)
summary(players.ord)
summary(players.ord)
(ctable <- coef(summary(players.ord)))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
(ctable <- cbind(ctable, "p value" = p))
mod = list("POLR_WL" = players.ord,
"POLR_WhiteWL" = players.ord2))
library(modelsummary)
install.packages('modelsummary')
library(modelsummary)
mod = list("POLR_WL" = players.ord,
"POLR_WhiteWL" = players.ord2)
modelsummary(mod, stars = TRUE)
